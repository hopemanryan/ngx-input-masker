{"version":3,"file":"ngx-input-masker.js","sources":["../../../projects/ngx-input-masker/src/lib/input-masker/ngx-input-masker.directive.ts","../../../projects/ngx-input-masker/src/lib/ngx-input-masker.module.ts","../../../projects/ngx-input-masker/src/public-api.ts","../../../projects/ngx-input-masker/src/ngx-input-masker.ts"],"sourcesContent":["import {\n    ChangeDetectorRef,\n    Directive,\n    ElementRef,\n    EventEmitter,\n    HostListener,\n    Input,\n    OnChanges,\n    OnInit,\n    Output,\n    SimpleChanges\n} from '@angular/core';\n\n@Directive({\n    // tslint:disable-next-line:directive-selector\n    selector: '[NgxInputMasker]'\n})\nexport class NgxInputMaskerDirective implements OnInit, OnChanges {\n    @Input('NgxInputMasker') maskCode = '';\n    @Input() customContainerSettings: Partial<CSSStyleDeclaration> = {};\n    @Input() customMaskSettings: Partial<CSSStyleDeclaration> = {};\n    @Input() containerClass?: string;\n    @Input() type = 'password';\n    @Output() valueChange: EventEmitter<string> = new EventEmitter<string>();\n    container: HTMLDivElement;\n\n    constructor(private el: ElementRef, private ref: ChangeDetectorRef) {\n\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(event): void {\n        this.updateBox();\n        this.valueChange.emit(this.el.nativeElement.value);\n\n    }\n\n    ngOnInit(): void {\n        this.buildBox();\n\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.container) {\n            this.container.className = this.containerClass;\n            if (changes.type.currentValue === 'password') {\n                this.el.nativeElement.style.color = 'transparent';\n                this.container.style.opacity = '1';\n\n            } else {\n                this.el.nativeElement.style.color = 'black';\n                this.container.style.opacity = '0';\n\n            }\n        }\n\n    }\n\n\n    updateBox(): void {\n        this.container.innerHTML = '';\n        const split = this.el.nativeElement.value.split('');\n        for (const char of split) {\n            const maskObject: HTMLSpanElement = document.createElement('span');\n            maskObject.innerHTML = this.maskCode;\n            // tslint:disable-next-line:forin\n            for (const key in this.customMaskSettings) {\n                maskObject.style[key] = this.customMaskSettings[key];\n            }\n            this.container.appendChild(maskObject);\n        }\n\n    }\n\n\n    buildBox(): void {\n        this.el.nativeElement.style.color = 'transparent';\n        this.container = document.createElement('div');\n        this.container.style.width = this.el.nativeElement.offsetWidth + 'px';\n        this.container.style.maxWidth = this.el.nativeElement.offsetWidth - 10 + 'px';\n        this.container.style.overflow = 'hidden';\n        this.container.style.height = this.el.nativeElement.offsetHeight + 'px';\n        this.container.style.position = 'fixed';\n        this.container.style.top = this.el.nativeElement.offsetTop + 'px';\n        this.container.style.left = this.el.nativeElement.offsetLeft + 'px';\n        this.container.style.display = 'flex';\n        this.container.style.alignItems = 'center';\n        this.container.style.paddingLeft = '5px';\n\n        // tslint:disable-next-line:forin\n        for (const key in this.customContainerSettings) {\n            this.container.style[key] = this.customContainerSettings[key];\n        }\n\n        this.container.addEventListener('click', () => this.el.nativeElement.focus());\n\n        document.body.appendChild(this.container);\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxInputMaskerDirective } from './input-masker/ngx-input-masker.directive';\n\n\n\n@NgModule({\n  declarations: [ NgxInputMaskerDirective],\n  imports: [\n  ],\n  exports: [NgxInputMaskerDirective]\n})\nexport class NgxInputMaskerModule { }\n","/*\n * Public API Surface of ngx-input-masker\n */\n\nexport * from './lib/input-masker/ngx-input-masker.directive'\nexport * from './lib/ngx-input-masker.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}